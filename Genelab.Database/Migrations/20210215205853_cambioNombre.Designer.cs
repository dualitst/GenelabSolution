// <auto-generated />
using System;
using Genelab.Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Genelab.Database.Migrations
{
    [DbContext(typeof(GenelabContext))]
    [Migration("20210215205853_cambioNombre")]
    partial class cambioNombre
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectDomicilioList_Result", b =>
                {
                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMuestraId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SelectDomicilioList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectFacturaList_Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstatusMuestraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMuestraId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SelectFacturaList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectMuestraList_Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusMuestraId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusMuestraNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMuestraId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SelectMuestraList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectMyBillList_Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SelectMyBillList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectMyList_Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SelectMyList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectPayList_Result", b =>
                {
                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMuestraId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SelectPayList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectResultList_Result", b =>
                {
                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMuestraId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SelectResultList");
                });

            modelBuilder.Entity("Genelab.Database.ComplexTypes.SelectSitioList_Result", b =>
                {
                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Delegacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusFacturaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusPagoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusProcesoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int");

                    b.Property<string>("EstatusResultadoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int");

                    b.Property<string>("EstudioNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaHoraResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolioPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LinkFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioDetalleID")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdFactura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioIdResultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMuestraId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SelectSitioList");
                });

            modelBuilder.Entity("Genelab.Database.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Genelab.Database.Models.DatosFacturacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodigoPostal");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Colonia");

                    b.Property<string>("Delegacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Delegacion");

                    b.Property<string>("EmailF")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EmailF");

                    b.Property<string>("EmpresaFiscal")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EmpresaFiscal");

                    b.Property<string>("RfcF")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("RfcF");

                    b.Property<string>("TelF")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TelF");

                    b.Property<string>("TipoPersona")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TipoPersona");

                    b.HasKey("Id");

                    b.ToTable("DatosFacturacion");
                });

            modelBuilder.Entity("Genelab.Database.Models.Domicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Calle");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodigoPostal");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Colonia");

                    b.Property<int>("DelegacionId")
                        .HasColumnType("int")
                        .HasColumnName("DelegacionId");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int")
                        .HasColumnName("ServicioId");

                    b.HasKey("Id");

                    b.ToTable("Domicilio");
                });

            modelBuilder.Entity("Genelab.Database.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodigoPostal");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Colonia");

                    b.Property<string>("Delegacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Delegacion");

                    b.Property<string>("EmailF")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EmailF");

                    b.Property<string>("EmpresaFiscal")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("EmpresaFiscal");

                    b.Property<string>("RfcF")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("RfcF");

                    b.Property<string>("TelF")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("TelF");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Genelab.Database.Models.EstatusFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("EstatusFactura");
                });

            modelBuilder.Entity("Genelab.Database.Models.EstatusMuestra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("EstatusMuestra");
                });

            modelBuilder.Entity("Genelab.Database.Models.EstatusPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("EstatusPago");
                });

            modelBuilder.Entity("Genelab.Database.Models.EstatusProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("EstatusProceso");
                });

            modelBuilder.Entity("Genelab.Database.Models.EstatusResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("EstatusResultado");
                });

            modelBuilder.Entity("Genelab.Database.Models.Estudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descripcion");

                    b.Property<DateTime>("FechaHoraCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraCreacion");

                    b.Property<DateTime>("FechaHoraModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraModificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nombre");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("Estudio");
                });

            modelBuilder.Entity("Genelab.Database.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("ImagenId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImagenId");

                    b.Property<double>("Monto")
                        .HasColumnType("float")
                        .HasColumnName("Monto");

                    b.Property<string>("Tarjeta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tarjeta");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TipoPago");

                    b.HasKey("Id");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Genelab.Database.Models.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Comentarios");

                    b.Property<string>("ImagenId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImagenId");

                    b.HasKey("Id");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("Genelab.Database.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("Calle")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Calle");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CodigoPostal");

                    b.Property<string>("Colonia")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Colonia");

                    b.Property<string>("Delegacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Delegacion");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Estado");

                    b.Property<int>("EstatusFacturaId")
                        .HasColumnType("int")
                        .HasColumnName("EstatusFacturaId");

                    b.Property<int>("EstatusPagoId")
                        .HasColumnType("int")
                        .HasColumnName("EstatusPagoId");

                    b.Property<int>("EstatusProcesoId")
                        .HasColumnType("int")
                        .HasColumnName("EstatusProcesoId");

                    b.Property<DateTime>("FechaHoraCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraCreacion");

                    b.Property<DateTime?>("FechaHoraFactura")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraFactura");

                    b.Property<DateTime>("FechaHoraModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraModificacion");

                    b.Property<DateTime?>("FechaHoraPago")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraPago");

                    b.Property<DateTime?>("FechaHoraPrepago")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraPrepago");

                    b.Property<DateTime?>("FechaHoraVisitaDom")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraVisitaDom");

                    b.Property<string>("FolioPago")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FolioPago");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Pais");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Telefono");

                    b.Property<int>("TipoServicioId")
                        .HasColumnType("int")
                        .HasColumnName("TipoServicioId");

                    b.Property<string>("UsuarioCreacion")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioCreacion");

                    b.Property<string>("UsuarioIdFactura")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioIdFactura");

                    b.Property<string>("UsuarioIdPago")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioIdPago");

                    b.Property<string>("UsuarioIdPrepago")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioIdPrepago");

                    b.Property<string>("UsuarioModificacion")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioModificacion");

                    b.HasKey("Id");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("Genelab.Database.Models.ServicioDatosFacturacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("DatosFacturacionId")
                        .HasColumnType("int")
                        .HasColumnName("DatosFacturacionId");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int")
                        .HasColumnName("ServicioId");

                    b.HasKey("Id");

                    b.ToTable("ServicioDatosFacturacion");
                });

            modelBuilder.Entity("Genelab.Database.Models.ServicioDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AnioNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("AnioNacimiento");

                    b.Property<string>("ApellidoMPaciente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ApellidoMPaciente");

                    b.Property<string>("ApellidoPPaciente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ApellidoPPaciente");

                    b.Property<string>("Ct")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Ct");

                    b.Property<int>("EstatusMuestraId")
                        .HasColumnType("int")
                        .HasColumnName("EstatusMuestraId");

                    b.Property<int>("EstatusResultadoId")
                        .HasColumnType("int")
                        .HasColumnName("EstatusResultadoId");

                    b.Property<int>("EstudioId")
                        .HasColumnType("int")
                        .HasColumnName("EstudioId");

                    b.Property<DateTime?>("FechaHoraMuestra")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraMuestra");

                    b.Property<DateTime?>("FechaHoraResultado")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaHoraResultado");

                    b.Property<string>("NombrePaciente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NombrePaciente");

                    b.Property<string>("NombreTitular")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NombreTitular");

                    b.Property<string>("Parentezco")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Parentesco");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Resultado");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioIdResultado")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioIdResultado");

                    b.Property<string>("UsuarioMuestraId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioMuestraId");

                    b.Property<string>("UsuarioServicio")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("UsuarioServicio");

                    b.HasKey("Id");

                    b.ToTable("ServicioDetalle");
                });

            modelBuilder.Entity("Genelab.Database.Models.ServicioEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("EstudioId")
                        .HasColumnType("int")
                        .HasColumnName("EstudioId");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int")
                        .HasColumnName("ServicioId");

                    b.HasKey("Id");

                    b.ToTable("ServicioEstudio");
                });

            modelBuilder.Entity("Genelab.Database.Models.TipoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("Activo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoServicio");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Genelab.Database.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Genelab.Database.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Genelab.Database.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Genelab.Database.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
